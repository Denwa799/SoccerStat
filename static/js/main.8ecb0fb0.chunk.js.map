{"version":3,"sources":["App.module.css","components/UI/ErrorLoading/ErrorLoading.module.css","components/UI/Container/Container.module.css","components/UI/Navigation/MobileNavbar/MenuToggle/MenuToggle.module.css","utils/routes.ts","components/AppRouter/AppRouter.tsx","components/UI/Navigation/Navbar/Navbar.tsx","components/UI/Navigation/MobileNavbar/MenuToggle/MenuToggle.tsx","components/UI/Navigation/MobileNavbar/MobileNavbar.tsx","components/UI/Navigation/Navigation.tsx","App.tsx","store/reducers/competitionListReducer.ts","store/reducers/competitionResourceReducer.ts","store/reducers/matchListReducer.ts","store/reducers/teamListReducer.ts","store/reducers/teamMatchesResourceReducer.ts","store/reducers/teamResourceReducer.ts","store/reducers/matchResourceReducer.ts","store/reducers/index.ts","store/store.tsx","index.tsx","components/UI/Container/Container.tsx","types/store/Competitions.ts","types/store/Competition.ts","types/store/Matches.ts","types/store/Teams.ts","types/store/TeamMatches.ts","types/store/Team.ts","types/store/Match.ts","components/UI/Navigation/Navigation.module.css","components/UI/Navigation/MobileNavbar/MobileNavbar.module.css"],"names":["module","exports","MAIN_ROUTE","COMPETITION_ID_ROUTE","MATCHES_ROUTE","MATCH_ID_ROUTE","TEAMS_ROUTE","TEAM_ID_ROUTE","Main","React","lazy","Matches","Teams","CompetitionResource","MatchResource","TeamResource","antIcon","LoadingOutlined","className","styles","Loader","spin","AppRouter","path","element","fallback","indicator","replace","to","Navbar","Container","theme","mode","Item","MenuToggle","props","MenuOutlined","onClick","onOpen","MobileNavbar","useState","visible","setVisible","handleClose","Drawer","placement","onClose","Menu","Navigation","desktop","mobile","App","locale","ArrowUpOutlined","BackTop","initialState","competitions","loading","error","competition","matches","teams","teamMatches","loadingTeamMatches","errorTeamMatches","team","loadingTeam","errorTeam","match","rootReducer","combineReducers","competitionList","state","action","type","CompetitionsActionTypes","FETCH_COMPETITIONS","FETCH_COMPETITIONS_SUCCESS","payload","FETCH_COMPETITIONS_ERROR","matchList","MatchesActionTypes","FETCH_MATCHES","FETCH_MATCHES_SUCCESS","FETCH_MATCHES_ERROR","teamList","TeamsActionTypes","FETCH_TEAMS","FETCH_TEAMS_SUCCESS","FETCH_TEAMS_ERROR","competitionResource","CompetitionActionTypes","FETCH_COMPETITION","FETCH_COMPETITION_SUCCESS","FETCH_COMPETITION_ERROR","teamMatchesResource","TeamMatchesActionTypes","FETCH_TEAM_MATCHES","FETCH_TEAM_MATCHES_SUCCESS","FETCH_TEAM_MATCHES_ERROR","teamResource","TeamActionTypes","FETCH_TEAM","FETCH_TEAM_SUCCESS","FETCH_TEAM_ERROR","matchResource","MatchActionTypes","FETCH_MATCH","FETCH_MATCH_SUCCESS","FETCH_MATCH_ERROR","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","children"],"mappings":"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","file":"static/js/main.8ecb0fb0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1wGef\",\"BackTop\":\"App_BackTop__1i3T1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"ErrorLoading_Loader__3NCyI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1zGWG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__c8dkT\"};","export const MAIN_ROUTE = '/';\r\nexport const COMPETITION_ID_ROUTE = '/:id';\r\nexport const MATCHES_ROUTE = '/matches';\r\nexport const MATCH_ID_ROUTE = '/matches/:id';\r\nexport const TEAMS_ROUTE = '/teams';\r\nexport const TEAM_ID_ROUTE = '/teams/:id';\r\n","import React, { Suspense } from 'react';\r\nimport { Routes, Route, Navigate } from 'react-router-dom';\r\nimport {\r\n  MAIN_ROUTE,\r\n  MATCHES_ROUTE,\r\n  TEAMS_ROUTE,\r\n  COMPETITION_ID_ROUTE,\r\n  TEAM_ID_ROUTE,\r\n  MATCH_ID_ROUTE,\r\n} from '../../utils/routes';\r\nimport { Spin } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport styles from '../UI/ErrorLoading/ErrorLoading.module.css';\r\n\r\nconst Main = React.lazy(() => import('../pages/Main/Main'));\r\nconst Matches = React.lazy(() => import('../pages/Matches/Matches'));\r\nconst Teams = React.lazy(() => import('../pages/Teams/Teams'));\r\nconst CompetitionResource = React.lazy(\r\n  () => import('../pages/Main/CompetitionResource/CompetitionResource')\r\n);\r\nconst MatchResource = React.lazy(() => import('../pages/Matches/MatchResource/MatchResource'));\r\nconst TeamResource = React.lazy(() => import('../pages/Teams/TeamResource/TeamResource'));\r\n\r\nconst antIcon = <LoadingOutlined className={styles.Loader} spin />;\r\n\r\nconst AppRouter: React.FC = () => {\r\n  return (\r\n    <Routes>\r\n      <Route\r\n        path={MAIN_ROUTE}\r\n        element={\r\n          <Suspense fallback={<Spin indicator={antIcon} />}>\r\n            <Main />\r\n          </Suspense>\r\n        }\r\n      />\r\n      <Route\r\n        path={MATCHES_ROUTE}\r\n        element={\r\n          <Suspense fallback={<Spin indicator={antIcon} />}>\r\n            <Matches />\r\n          </Suspense>\r\n        }\r\n      />\r\n      <Route\r\n        path={TEAMS_ROUTE}\r\n        element={\r\n          <Suspense fallback={<Spin indicator={antIcon} />}>\r\n            <Teams />\r\n          </Suspense>\r\n        }\r\n      />\r\n      <Route\r\n        path={COMPETITION_ID_ROUTE}\r\n        element={\r\n          <Suspense fallback={<Spin indicator={antIcon} />}>\r\n            <CompetitionResource />\r\n          </Suspense>\r\n        }\r\n      />\r\n      <Route\r\n        path={MATCH_ID_ROUTE}\r\n        element={\r\n          <Suspense fallback={<Spin indicator={antIcon} />}>\r\n            <MatchResource />\r\n          </Suspense>\r\n        }\r\n      />\r\n      <Route\r\n        path={TEAM_ID_ROUTE}\r\n        element={\r\n          <Suspense fallback={<Spin indicator={antIcon} />}>\r\n            <TeamResource />\r\n          </Suspense>\r\n        }\r\n      />\r\n      <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\r\nimport Container from '../../Container/Container';\r\nimport { Menu } from 'antd';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { MAIN_ROUTE, MATCHES_ROUTE, TEAMS_ROUTE } from '../../../../utils/routes';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Menu theme=\"light\" mode=\"horizontal\">\r\n          <Menu.Item key={0}>\r\n            <NavLink to={MAIN_ROUTE}>СОРЕВНОВАНИЯ</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key={1}>\r\n            <NavLink to={MATCHES_ROUTE}>МАТЧИ</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key={2}>\r\n            <NavLink to={TEAMS_ROUTE}>КОМАНДЫ</NavLink>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { FC } from 'react';\r\nimport styles from './MenuToggle.module.css';\r\nimport { MenuOutlined } from '@ant-design/icons';\r\n\r\ninterface MenuToggleProps {\r\n  onOpen: (menu: boolean) => void;\r\n}\r\n\r\nconst MenuToggle: FC<MenuToggleProps> = (props) => {\r\n  function clickHandler() {\r\n    props.onOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <MenuOutlined className={styles.MenuToggle} onClick={() => clickHandler()} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuToggle;\r\n","import React, { FC, useState } from 'react';\r\nimport MenuToggle from './MenuToggle/MenuToggle';\r\nimport styles from './MobileNavbar.module.css';\r\nimport Container from '../../Container/Container';\r\nimport { Drawer, Menu } from 'antd';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { MAIN_ROUTE, MATCHES_ROUTE, TEAMS_ROUTE } from '../../../../utils/routes';\r\n\r\nconst MobileNavbar: FC = () => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.MobileNavbar}>\r\n      <Container>\r\n        <Drawer\r\n          className={styles.Drawer}\r\n          visible={visible}\r\n          placement={'left'}\r\n          onClose={handleClose}\r\n          key={'left'}\r\n        >\r\n          <Menu className={styles.Menu} theme=\"light\">\r\n            <Menu.Item key={0}>\r\n              <NavLink to={MAIN_ROUTE} onClick={handleClose}>\r\n                СОРЕВНОВАНИЯ\r\n              </NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key={1}>\r\n              <NavLink to={MATCHES_ROUTE} onClick={handleClose}>\r\n                МАТЧИ\r\n              </NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key={2}>\r\n              <NavLink to={TEAMS_ROUTE} onClick={handleClose}>\r\n                КОМАНДЫ\r\n              </NavLink>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Drawer>\r\n        <MenuToggle onOpen={handleOpen} />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MobileNavbar;\r\n","import React from 'react';\r\nimport styles from './Navigation.module.css';\r\nimport Navbar from './Navbar/Navbar';\r\nimport MobileNavbar from './MobileNavbar/MobileNavbar';\r\n\r\nconst Navigation: React.FC = () => {\r\n  return (\r\n    <div className={styles.Navigation}>\r\n      <div className={styles.desktop}>\r\n        <Navbar />\r\n      </div>\r\n      <div className={styles.mobile}>\r\n        <MobileNavbar />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport AppRouter from './components/AppRouter/AppRouter';\r\nimport styles from './App.module.css';\r\nimport Navigation from './components/UI/Navigation/Navigation';\r\nimport { BackTop, ConfigProvider } from 'antd';\r\nimport 'moment/locale/ru';\r\nimport locale from 'antd/lib/locale/ru_RU';\r\nimport { ArrowUpOutlined } from '@ant-design/icons';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className={styles.App}>\r\n      <ConfigProvider locale={locale}>\r\n        <Navigation />\r\n        <AppRouter />\r\n        <BackTop>\r\n          <ArrowUpOutlined className={styles.BackTop} />\r\n        </BackTop>\r\n      </ConfigProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import {\r\n  ICompetitionListAction,\r\n  ICompetitionListState,\r\n  CompetitionsActionTypes,\r\n} from '../../types/store/Competitions';\r\n\r\nconst initialState: ICompetitionListState = {\r\n  competitions: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const competitionListReducer = (\r\n  state = initialState,\r\n  action: ICompetitionListAction\r\n): ICompetitionListState => {\r\n  switch (action.type) {\r\n    case CompetitionsActionTypes.FETCH_COMPETITIONS:\r\n      return { loading: true, error: null, competitions: state.competitions };\r\n    case CompetitionsActionTypes.FETCH_COMPETITIONS_SUCCESS:\r\n      return { loading: false, error: null, competitions: action.payload };\r\n    case CompetitionsActionTypes.FETCH_COMPETITIONS_ERROR:\r\n      return { loading: false, error: action.payload, competitions: state.competitions };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ICompetitionResourceAction,\r\n  ICompetitionResourceState,\r\n  CompetitionActionTypes,\r\n} from '../../types/store/Competition';\r\n\r\nconst initialState: ICompetitionResourceState = {\r\n  competition: {},\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const competitionResourceReducer = (\r\n  state = initialState,\r\n  action: ICompetitionResourceAction\r\n): ICompetitionResourceState => {\r\n  switch (action.type) {\r\n    case CompetitionActionTypes.FETCH_COMPETITION:\r\n      return { loading: true, error: null, competition: state.competition };\r\n    case CompetitionActionTypes.FETCH_COMPETITION_SUCCESS:\r\n      return { loading: false, error: null, competition: action.payload };\r\n    case CompetitionActionTypes.FETCH_COMPETITION_ERROR:\r\n      return { loading: false, error: action.payload, competition: state.competition };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { IMatchListAction, IMatchListState, MatchesActionTypes } from '../../types/store/Matches';\r\n\r\nconst initialState: IMatchListState = {\r\n  matches: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const matchListReducer = (\r\n  state = initialState,\r\n  action: IMatchListAction\r\n): IMatchListState => {\r\n  switch (action.type) {\r\n    case MatchesActionTypes.FETCH_MATCHES:\r\n      return { loading: true, error: null, matches: state.matches };\r\n    case MatchesActionTypes.FETCH_MATCHES_SUCCESS:\r\n      return { loading: false, error: null, matches: action.payload };\r\n    case MatchesActionTypes.FETCH_MATCHES_ERROR:\r\n      return { loading: false, error: action.payload, matches: state.matches };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ITeamListAction, ITeamListState, TeamsActionTypes } from '../../types/store/Teams';\r\n\r\nconst initialState: ITeamListState = {\r\n  teams: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const teamListReducer = (state = initialState, action: ITeamListAction): ITeamListState => {\r\n  switch (action.type) {\r\n    case TeamsActionTypes.FETCH_TEAMS:\r\n      return { loading: true, error: null, teams: state.teams };\r\n    case TeamsActionTypes.FETCH_TEAMS_SUCCESS:\r\n      return { loading: false, error: null, teams: action.payload };\r\n    case TeamsActionTypes.FETCH_TEAMS_ERROR:\r\n      return { loading: false, error: action.payload, teams: state.teams };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ITeamMatchesResourceAction,\r\n  ITeamMatchesResourceState,\r\n  TeamMatchesActionTypes,\r\n} from '../../types/store/TeamMatches';\r\n\r\nconst initialState: ITeamMatchesResourceState = {\r\n  teamMatches: {},\r\n  loadingTeamMatches: false,\r\n  errorTeamMatches: null,\r\n};\r\n\r\nexport const teamMatchesResourceReducer = (\r\n  state = initialState,\r\n  action: ITeamMatchesResourceAction\r\n): ITeamMatchesResourceState => {\r\n  switch (action.type) {\r\n    case TeamMatchesActionTypes.FETCH_TEAM_MATCHES:\r\n      return { loadingTeamMatches: true, errorTeamMatches: null, teamMatches: state.teamMatches };\r\n    case TeamMatchesActionTypes.FETCH_TEAM_MATCHES_SUCCESS:\r\n      return { loadingTeamMatches: false, errorTeamMatches: null, teamMatches: action.payload };\r\n    case TeamMatchesActionTypes.FETCH_TEAM_MATCHES_ERROR:\r\n      return {\r\n        loadingTeamMatches: false,\r\n        errorTeamMatches: action.payload,\r\n        teamMatches: state.teamMatches,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ITeamResourceAction, ITeamResourceState, TeamActionTypes } from '../../types/store/Team';\r\n\r\nconst initialState: ITeamResourceState = {\r\n  team: {},\r\n  loadingTeam: false,\r\n  errorTeam: null,\r\n};\r\n\r\nexport const teamResourceReducer = (\r\n  state = initialState,\r\n  action: ITeamResourceAction\r\n): ITeamResourceState => {\r\n  switch (action.type) {\r\n    case TeamActionTypes.FETCH_TEAM:\r\n      return { loadingTeam: true, errorTeam: null, team: state.team };\r\n    case TeamActionTypes.FETCH_TEAM_SUCCESS:\r\n      return { loadingTeam: false, errorTeam: null, team: action.payload };\r\n    case TeamActionTypes.FETCH_TEAM_ERROR:\r\n      return { loadingTeam: false, errorTeam: action.payload, team: state.team };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  IMatchResourceAction,\r\n  IMatchResourceState,\r\n  MatchActionTypes,\r\n} from '../../types/store/Match';\r\n\r\nconst initialState: IMatchResourceState = {\r\n  match: {},\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const matchResourceReducer = (\r\n  state = initialState,\r\n  action: IMatchResourceAction\r\n): IMatchResourceState => {\r\n  switch (action.type) {\r\n    case MatchActionTypes.FETCH_MATCH:\r\n      return { loading: true, error: null, match: state.match };\r\n    case MatchActionTypes.FETCH_MATCH_SUCCESS:\r\n      return { loading: false, error: null, match: action.payload };\r\n    case MatchActionTypes.FETCH_MATCH_ERROR:\r\n      return { loading: false, error: action.payload, match: state.match };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { competitionListReducer } from './competitionListReducer';\r\nimport { competitionResourceReducer } from './competitionResourceReducer';\r\nimport { matchListReducer } from './matchListReducer';\r\nimport { teamListReducer } from './teamListReducer';\r\nimport { teamMatchesResourceReducer } from './teamMatchesResourceReducer';\r\nimport { teamResourceReducer } from './teamResourceReducer';\r\nimport { matchResourceReducer } from './matchResourceReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  competitionList: competitionListReducer,\r\n  matchList: matchListReducer,\r\n  teamList: teamListReducer,\r\n  competitionResource: competitionResourceReducer,\r\n  teamMatchesResource: teamMatchesResourceReducer,\r\n  teamResource: teamResourceReducer,\r\n  matchResource: matchResourceReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './reducers';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container: React.FC = (props) => {\r\n  return <div className={styles.Container}>{props.children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","export interface ICompetitionListState {\r\n  competitions: Array<{\r\n    id: number;\r\n    area: {\r\n      id: number;\r\n      name: string;\r\n      countryCode: string;\r\n      ensignUrl: string | null;\r\n    };\r\n    name: string;\r\n    code: string;\r\n    emblemUrl: string | null;\r\n    plan: string | null;\r\n    currentSeason: {\r\n      id: number;\r\n      startDate: string;\r\n      endDate: string;\r\n      currentMatchday: number | null;\r\n      winner: {\r\n        id: number;\r\n        name: string;\r\n        shortName: string | null;\r\n        tla: string | null;\r\n        crestUrl: string | null;\r\n      } | null;\r\n      numberOfAvailableSeasons: number | null;\r\n      lastUpdated: string;\r\n    };\r\n  }>;\r\n  loading: boolean;\r\n  error: null | string;\r\n}\r\n\r\nexport interface ICompetitionListAction {\r\n  type: string;\r\n  // Невозможно определить точный тип для payload, так как он обрабатывает и полученный массив, и ошибку.\r\n  // При попытке указать payload'у типы, принадлежащие competitions и error происходит конфликт между ними внутри\r\n  // reducer, так как error не может содержать массив объектов, а competitions не может содержать ничего другого,\r\n  // кроме массива объектов с расписанными типами содержимого.\r\n  payload?: any;\r\n}\r\n\r\nexport enum CompetitionsActionTypes {\r\n  // eslint-disable-next-line no-unused-vars\r\n  FETCH_COMPETITIONS = 'FETCH_COMPETITIONS',\r\n  // eslint-disable-next-line no-unused-vars\r\n  FETCH_COMPETITIONS_SUCCESS = 'FETCH_COMPETITIONS_SUCCESS',\r\n  // eslint-disable-next-line no-unused-vars\r\n  FETCH_COMPETITIONS_ERROR = 'FETCH_COMPETITIONS_ERROR',\r\n}\r\n\r\ninterface IFetchCompetitionsAction {\r\n  type: CompetitionsActionTypes.FETCH_COMPETITIONS;\r\n}\r\n\r\ninterface IFetchCompetitionsSuccessAction {\r\n  type: CompetitionsActionTypes.FETCH_COMPETITIONS_SUCCESS;\r\n  payload: Object[];\r\n}\r\n\r\ninterface IFetchCompetitionsErrorAction {\r\n  type: CompetitionsActionTypes.FETCH_COMPETITIONS_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type CompetitionsAction =\r\n  | IFetchCompetitionsAction\r\n  | IFetchCompetitionsSuccessAction\r\n  | IFetchCompetitionsErrorAction;\r\n","export interface ICompetitionResourceState {\r\n  competition: {\r\n    count?: number;\r\n    filters?: {};\r\n    competition?: {\r\n      id: number;\r\n      area: {\r\n        id: number;\r\n        name: string;\r\n      };\r\n      name: string;\r\n      code: string;\r\n      plan: string | null;\r\n      lastUpdated: string;\r\n    };\r\n    matches?: Array<{\r\n      id: number;\r\n      season: {\r\n        id: number;\r\n        startDate: string;\r\n        endDate: string;\r\n        currentMatchday: number | null;\r\n      };\r\n      utcDate: string;\r\n      status: string;\r\n      matchday: number | null;\r\n      stage: string | null;\r\n      group: string | null;\r\n      lastUpdated: string;\r\n      odds: {\r\n        msg: string | null;\r\n      };\r\n      score: {\r\n        winner: string | null;\r\n        duration: string | null;\r\n        fullTime: {\r\n          homeTeam: number | null;\r\n          awayTeam: number | null;\r\n        };\r\n        halfTime: {\r\n          homeTeam: number | null;\r\n          awayTeam: number | null;\r\n        };\r\n        extraTime: {\r\n          homeTeam: number | null;\r\n          awayTeam: number | null;\r\n        };\r\n        penalties: {\r\n          homeTeam: number | null;\r\n          awayTeam: number | null;\r\n        };\r\n      };\r\n      homeTeam: {\r\n        id: number;\r\n        name: string;\r\n      };\r\n      awayTeam: {\r\n        id: number;\r\n        name: string;\r\n      };\r\n      referees: [];\r\n    }>;\r\n  };\r\n  loading: boolean;\r\n  error: null | string;\r\n}\r\n\r\nexport interface ICompetitionResourceAction {\r\n  type: string;\r\n  // Невозможно определить точный тип для payload, так как он обрабатывает и полученный объект, и ошибку.\r\n  // При попытке указать payload'у типы, принадлежащие competition и error происходит конфликт между ними внутри\r\n  // reducer, так как error не может содержать объект, а competition не может содержать ничего другого,\r\n  // кроме объекта с расписанными типами содержимого.\r\n  payload?: any;\r\n}\r\n\r\nexport enum CompetitionActionTypes {\r\n  // eslint-disable-next-line no-unused-vars\r\n  FETCH_COMPETITION = 'FETCH_COMPETITION',\r\n  // eslint-disable-next-line no-unused-vars\r\n  FETCH_COMPETITION_SUCCESS = 'FETCH_COMPETITION_SUCCESS',\r\n  // eslint-disable-next-line no-unused-vars\r\n  FETCH_COMPETITION_ERROR = 'FETCH_COMPETITION_ERROR',\r\n}\r\n\r\ninterface IFetchCompetitionAction {\r\n  type: CompetitionActionTypes.FETCH_COMPETITION;\r\n}\r\n\r\ninterface IFetchCompetitionSuccessAction {\r\n  type: CompetitionActionTypes.FETCH_COMPETITION_SUCCESS;\r\n  payload: Object;\r\n}\r\n\r\ninterface IFetchCompetitionErrorAction {\r\n  type: CompetitionActionTypes.FETCH_COMPETITION_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type CompetitionAction =\r\n  | IFetchCompetitionAction\r\n  | IFetchCompetitionSuccessAction\r\n  | IFetchCompetitionErrorAction;\r\n","export interface IMatchListState {\r\n  matches: Array<{\r\n    id: number;\r\n    competition: {\r\n      id: number;\r\n      name: string;\r\n      area: {\r\n        name: string;\r\n        code: string;\r\n        ensignUrl: string | null;\r\n      };\r\n    };\r\n    season: {\r\n      id: number;\r\n      startDate: string;\r\n      endDate: string;\r\n      currentMatchday: number | null;\r\n      winner: {\r\n        id: number;\r\n        name: string;\r\n        shortName: string | null;\r\n        tla: string | null;\r\n        crestUrl: string | null;\r\n      } | null;\r\n    };\r\n    utcDate: string;\r\n    status: string;\r\n    matchday: number | null;\r\n    stage: string | null;\r\n    group: string | null;\r\n    lastUpdated: string;\r\n    odds: {\r\n      msg: string | null;\r\n    };\r\n    score: {\r\n      winner: string | null;\r\n      duration: string | null;\r\n      fullTime: {\r\n        homeTeam: number | null;\r\n        awayTeam: number | null;\r\n      };\r\n      halfTime: {\r\n        homeTeam: number | null;\r\n        awayTeam: number | null;\r\n      };\r\n      extraTime: {\r\n        homeTeam: number | null;\r\n        awayTeam: number | null;\r\n      };\r\n      penalties: {\r\n        homeTeam: number | null;\r\n        awayTeam: number | null;\r\n      };\r\n    };\r\n    homeTeam: {\r\n      id: number;\r\n      name: string;\r\n    };\r\n    awayTeam: {\r\n      id: number;\r\n      name: string;\r\n    };\r\n    referees: [];\r\n  }>;\r\n  loading: boolean;\r\n  error: null | string;\r\n}\r\n\r\nexport interface IMatchListAction {\r\n  type: string;\r\n  // Невозможно определить точный тип для payload, так как он обрабатывает и полученный массив, и ошибку.\r\n  // При попытке указать payload'у типы, принадлежащие matches и error происходит конфликт между ними внутри\r\n  // reducer, так как error не может содержать массив объектов, а matches не может содержать ничего другого,\r\n  // кроме массива объектов с расписанными типами содержимого.\r\n  payload?: any;\r\n}\r\n\r\nexport enum MatchesActionTypes {\r\n  // eslint-disable-next-line no-unused-vars\r\n  FETCH_MATCHES = 'FETCH_MATCHES',\r\n  // eslint-disable-next-line no-unused-vars\r\n  FETCH_MATCHES_SUCCESS = 'FETCH_MATCHES_SUCCESS',\r\n  // eslint-disable-next-line no-unused-vars\r\n  FETCH_MATCHES_ERROR = 'FETCH_MATCHES_ERROR',\r\n}\r\n\r\ninterface IFetchMatchesAction {\r\n  type: MatchesActionTypes.FETCH_MATCHES;\r\n}\r\n\r\ninterface IFetchMatchesSuccessAction {\r\n  type: MatchesActionTypes.FETCH_MATCHES_SUCCESS;\r\n  payload: Object[];\r\n}\r\n\r\ninterface IFetchMatchesErrorAction {\r\n  type: MatchesActionTypes.FETCH_MATCHES_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type MatchesAction =\r\n  | IFetchMatchesAction\r\n  | IFetchMatchesSuccessAction\r\n  | IFetchMatchesErrorAction;\r\n","export interface ITeamListState {\r\n  teams: Array<{\r\n    id: number;\r\n    area: {\r\n      id: number;\r\n      name: string;\r\n    };\r\n    name: string;\r\n    shortName: string | null;\r\n    tla: string;\r\n    crestUrl: string | null;\r\n    address: string | null;\r\n    phone: string | null;\r\n    website: string | null;\r\n    email: string | null;\r\n    founded: number | null;\r\n    clubColors: string | null;\r\n    venue: string | null;\r\n    lastUpdated: string;\r\n  }>;\r\n  loading: boolean;\r\n  error: null | string;\r\n}\r\n\r\nexport interface ITeamListAction {\r\n  type: string;\r\n  // Невозможно определить точный тип для payload, так как он обрабатывает и полученный массив, и ошибку.\r\n  // При попытке указать payload'у типы, принадлежащие teams и error происходит конфликт между ними внутри\r\n  // reducer, так как error не может содержать массив объектов, а teams не может содержать ничего другого,\r\n  // кроме массива объектов с расписанными типами содержимого.\r\n  payload?: any;\r\n}\r\n\r\nexport enum TeamsActionTypes {\r\n  // eslint-disable-next-line no-unused-vars\r\n  FETCH_TEAMS = 'FETCH_TEAMS',\r\n  // eslint-disable-next-line no-unused-vars\r\n  FETCH_TEAMS_SUCCESS = 'FETCH_TEAMS_SUCCESS',\r\n  // eslint-disable-next-line no-unused-vars\r\n  FETCH_TEAMS_ERROR = 'FETCH_TEAMS_ERROR',\r\n}\r\n\r\ninterface IFetchTeamsAction {\r\n  type: TeamsActionTypes.FETCH_TEAMS;\r\n}\r\n\r\ninterface IFetchTeamsSuccessAction {\r\n  type: TeamsActionTypes.FETCH_TEAMS_SUCCESS;\r\n  payload: Object[];\r\n}\r\n\r\ninterface IFetchTeamsErrorAction {\r\n  type: TeamsActionTypes.FETCH_TEAMS_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type TeamsAction = IFetchTeamsAction | IFetchTeamsSuccessAction | IFetchTeamsErrorAction;\r\n","export interface ITeamMatchesResourceState {\r\n  teamMatches: {\r\n    count?: number;\r\n    filters?: {\r\n      permission?: string | null;\r\n      limit?: number | null;\r\n    };\r\n    matches?: Array<{\r\n      id: number;\r\n      competition: {\r\n        id: number;\r\n        name: string;\r\n        area: {\r\n          name: string;\r\n          code: string;\r\n          ensignUrl: string | null;\r\n        };\r\n      };\r\n      season: {\r\n        id: number;\r\n        startDate: string;\r\n        endDate: string;\r\n        currentMatchday: number | null;\r\n        winner: {\r\n          id: number;\r\n          name: string;\r\n          shortName?: string | null;\r\n          tla?: string | null;\r\n          crestUrl?: string | null;\r\n        } | null;\r\n      };\r\n      utcDate: string;\r\n      status: string;\r\n      matchday: number | null;\r\n      stage: string | null;\r\n      group: string | null;\r\n      lastUpdated: string;\r\n      odds: {\r\n        msg: string | null;\r\n      };\r\n      score: {\r\n        winner: string | null;\r\n        duration: string | null;\r\n        fullTime: {\r\n          homeTeam: number | null;\r\n          awayTeam: number | null;\r\n        };\r\n        halfTime: {\r\n          homeTeam: number | null;\r\n          awayTeam: number | null;\r\n        };\r\n        extraTime: {\r\n          homeTeam: number | null;\r\n          awayTeam: number | null;\r\n        };\r\n        penalties: {\r\n          homeTeam: number | null;\r\n          awayTeam: number | null;\r\n        };\r\n      };\r\n      homeTeam: {\r\n        id: number;\r\n        name: string;\r\n      };\r\n      awayTeam: {\r\n        id: number;\r\n        name: string;\r\n      };\r\n      referees: {\r\n        id: number;\r\n        name: string;\r\n        role: string | null;\r\n        nationality: string | null;\r\n      }[];\r\n    }>;\r\n  };\r\n  loadingTeamMatches: boolean;\r\n  errorTeamMatches: null | string;\r\n}\r\n\r\nexport interface ITeamMatchesResourceAction {\r\n  type: string;\r\n  // Невозможно определить точный тип для payload, так как он обрабатывает и полученный объект, и ошибку.\r\n  // При попытке указать payload'у типы, принадлежащие teamMatches и error происходит конфликт между ними внутри\r\n  // reducer, так как error не может содержать объект, а teamMatches не может содержать ничего другого,\r\n  // кроме объекта с расписанными типами содержимого.\r\n  payload?: any;\r\n}\r\n\r\nexport enum TeamMatchesActionTypes {\r\n  // eslint-disable-next-line no-unused-vars\r\n  FETCH_TEAM_MATCHES = 'FETCH_TEAM_MATCHES',\r\n  // eslint-disable-next-line no-unused-vars\r\n  FETCH_TEAM_MATCHES_SUCCESS = 'FETCH_TEAM_MATCHES_SUCCESS',\r\n  // eslint-disable-next-line no-unused-vars\r\n  FETCH_TEAM_MATCHES_ERROR = 'FETCH_TEAM_MATCHES_ERROR',\r\n}\r\n\r\ninterface IFetchTeamMatchesAction {\r\n  type: TeamMatchesActionTypes.FETCH_TEAM_MATCHES;\r\n}\r\n\r\ninterface IFetchTeamMatchesSuccessAction {\r\n  type: TeamMatchesActionTypes.FETCH_TEAM_MATCHES_SUCCESS;\r\n  payload: Object;\r\n}\r\n\r\ninterface IFetchTeamMatchesErrorAction {\r\n  type: TeamMatchesActionTypes.FETCH_TEAM_MATCHES_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type TeamMatchesAction =\r\n  | IFetchTeamMatchesAction\r\n  | IFetchTeamMatchesSuccessAction\r\n  | IFetchTeamMatchesErrorAction;\r\n","export interface ITeamResourceState {\r\n  team: {\r\n    id?: number;\r\n    area?: {\r\n      id: number;\r\n      name: string;\r\n    };\r\n    activeCompetitions?: {\r\n      id: number;\r\n      area: {\r\n        id: number;\r\n        name: string;\r\n      };\r\n      name: string;\r\n      code: string;\r\n      plan: string | null;\r\n      lastUpdated: string;\r\n    }[];\r\n    name?: string;\r\n    shortName?: string | null;\r\n    tla?: string;\r\n    crestUrl?: string | null;\r\n    address?: string | null;\r\n    phone?: string | null;\r\n    website?: string | null;\r\n    email?: string | null;\r\n    founded?: number | null;\r\n    clubColors?: string | null;\r\n    venue?: string | null;\r\n    squad?: {\r\n      id: number;\r\n      name: string;\r\n      position: string | null;\r\n      dateOfBirth: string | null;\r\n      countryOfBirth: string | null;\r\n      nationality: string | null;\r\n      shirtNumber: number | null;\r\n      role: string | null;\r\n    }[];\r\n    lastUpdated?: string;\r\n  };\r\n  loadingTeam: boolean;\r\n  errorTeam: null | string;\r\n}\r\n\r\nexport interface ITeamResourceAction {\r\n  type: string;\r\n  // Невозможно определить точный тип для payload, так как он обрабатывает и полученный объект, и ошибку.\r\n  // При попытке указать payload'у типы, принадлежащие team и error происходит конфликт между ними внутри\r\n  // reducer, так как error не может содержать объект, а team не может содержать ничего другого,\r\n  // кроме объекта с расписанными типами содержимого.\r\n  payload?: any;\r\n}\r\n\r\nexport enum TeamActionTypes {\r\n  // eslint-disable-next-line no-unused-vars\r\n  FETCH_TEAM = 'FETCH_TEAM',\r\n  // eslint-disable-next-line no-unused-vars\r\n  FETCH_TEAM_SUCCESS = 'FETCH_TEAM_SUCCESS',\r\n  // eslint-disable-next-line no-unused-vars\r\n  FETCH_TEAM_ERROR = 'FETCH_TEAM_ERROR',\r\n}\r\n\r\ninterface IFetchTeamAction {\r\n  type: TeamActionTypes.FETCH_TEAM;\r\n}\r\n\r\ninterface IFetchTeamSuccessAction {\r\n  type: TeamActionTypes.FETCH_TEAM_SUCCESS;\r\n  payload: Object;\r\n}\r\n\r\ninterface IFetchTeamErrorAction {\r\n  type: TeamActionTypes.FETCH_TEAM_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type TeamAction = IFetchTeamAction | IFetchTeamSuccessAction | IFetchTeamErrorAction;\r\n","export interface IMatchResourceState {\r\n  match: {\r\n    head2head?: {\r\n      numberOfMatches: number | null;\r\n      totalGoals: number | null;\r\n      homeTeam: {\r\n        id: number;\r\n        name: string;\r\n        wins: number | null;\r\n        draws: number | null;\r\n        losses: number | null;\r\n      };\r\n      awayTeam: {\r\n        id: number;\r\n        name: string;\r\n        wins: number | null;\r\n        draws: number | null;\r\n        losses: number | null;\r\n      };\r\n    };\r\n    match?: {\r\n      id: number;\r\n      competition: {\r\n        id: number;\r\n        name: string;\r\n        area: {\r\n          name: string;\r\n          code: string;\r\n          ensignUrl: string | null;\r\n        };\r\n      };\r\n      season: {\r\n        id: number;\r\n        startDate: string;\r\n        endDate: string;\r\n        currentMatchday: number | null;\r\n        winner: {\r\n          id: number;\r\n          name: string;\r\n          shortName: string | null;\r\n          tla: string | null;\r\n          crestUrl: string | null;\r\n        } | null;\r\n      };\r\n      utcDate: string;\r\n      status: string;\r\n      venue: string | null;\r\n      matchday: number | null;\r\n      stage: string | null;\r\n      group: string | null;\r\n      lastUpdated: string;\r\n      odds: {\r\n        msg: string | null;\r\n      };\r\n      score: {\r\n        winner: string | null;\r\n        duration: string | null;\r\n        fullTime: {\r\n          homeTeam: number | null;\r\n          awayTeam: number | null;\r\n        };\r\n        halfTime: {\r\n          homeTeam: number | null;\r\n          awayTeam: number | null;\r\n        };\r\n        extraTime: {\r\n          homeTeam: number | null;\r\n          awayTeam: number | null;\r\n        };\r\n        penalties: {\r\n          homeTeam: number | null;\r\n          awayTeam: number | null;\r\n        };\r\n      };\r\n      homeTeam: {\r\n        id: number;\r\n        name: string;\r\n      };\r\n      awayTeam: {\r\n        id: number;\r\n        name: string;\r\n      };\r\n      referees: [];\r\n    };\r\n  };\r\n  loading: boolean;\r\n  error: null | string;\r\n}\r\n\r\nexport interface IMatchResourceAction {\r\n  type: string;\r\n  // Невозможно определить точный тип для payload, так как он обрабатывает и полученный объект, и ошибку.\r\n  // При попытке указать payload'у типы, принадлежащие competition и error происходит конфликт между ними внутри\r\n  // reducer, так как error не может содержать объект, а competition не может содержать ничего другого,\r\n  // кроме объекта с расписанными типами содержимого.\r\n  payload?: any;\r\n}\r\n\r\nexport enum MatchActionTypes {\r\n  // eslint-disable-next-line no-unused-vars\r\n  FETCH_MATCH = 'FETCH_MATCH',\r\n  // eslint-disable-next-line no-unused-vars\r\n  FETCH_MATCH_SUCCESS = 'FETCH_MATCH_SUCCESS',\r\n  // eslint-disable-next-line no-unused-vars\r\n  FETCH_MATCH_ERROR = 'FETCH_MATCH_ERROR',\r\n}\r\n\r\ninterface IFetchMatchAction {\r\n  type: MatchActionTypes.FETCH_MATCH;\r\n}\r\n\r\ninterface IFetchMatchSuccessAction {\r\n  type: MatchActionTypes.FETCH_MATCH_SUCCESS;\r\n  payload: Object;\r\n}\r\n\r\ninterface IFetchMatchErrorAction {\r\n  type: MatchActionTypes.FETCH_MATCH_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type MatchAction = IFetchMatchAction | IFetchMatchSuccessAction | IFetchMatchErrorAction;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"Navigation_Navigation__6P0GX\",\"mobile\":\"Navigation_mobile__3fnNp\",\"desktop\":\"Navigation_desktop__RRHly\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MobileNavbar\":\"MobileNavbar_MobileNavbar__3Tnsa\",\"Menu\":\"MobileNavbar_Menu__1Q8ii\",\"Drawer\":\"MobileNavbar_Drawer__Dgo4l\"};"],"sourceRoot":""}