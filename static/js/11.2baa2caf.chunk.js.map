{"version":3,"sources":["utils/errorResponseHandler.ts","hooks/useTypedSelector.ts","components/UI/ErrorLoading/ErrorLoading.tsx","store/selectors/selectors.ts","utils/matchStatusTranslation.ts","assets/img/noImage.jpg","components/pages/Matches/Matches.module.css","components/pages/Matches/MatchList/MatchList.module.css","components/pages/Matches/MatchList/MatchList.tsx","store/action-creators/MatchList.ts","components/pages/Matches/Matches.tsx"],"names":["errorResponseHandler","status","dispatch","type","errorText403","otherErrorText","payload","useTypedSelector","useSelector","antIcon","className","styles","Loader","spin","ErrorLoading","loading","error","indicator","competitionListSelector","state","competitionList","competitionResourceSelector","competitionResource","matchListSelector","matchList","matchResourceSelector","matchResource","teamListSelector","teamList","teamResourceSelector","teamResource","teamMatchesResourceSelector","teamMatchesResource","matchStatusTranslation","module","exports","Meta","Card","MatchList","matches","useDispatch","useState","currentPage","setCurrentPage","matchesPerPage","setMatchesPerPage","useEffect","a","MatchesActionTypes","FETCH_MATCHES","axios","get","process","headers","response","FETCH_MATCHES_SUCCESS","data","FETCH_MATCHES_ERROR","lastMatchIndex","firstMatchIndex","currentMatchList","slice","Cards","gutter","length","map","match","xl","lg","md","sm","xs","to","id","hoverable","cover","CardImg","src","competition","area","ensignUrl","noImage","alt","code","title","homeTeam","name","awayTeam","description","score","fullTime","PaginationRow","span","defaultCurrent","defaultPageSize","size","window","innerWidth","responsive","total","showSizeChanger","onChange","pageNumber","pageSize","pageSizeOptions","Title","Typography","Matches","Container"],"mappings":"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","file":"static/js/11.2baa2caf.chunk.js","sourcesContent":["export const errorResponseHandler = (\r\n  status: number,\r\n  dispatch: ({ type, payload }: { type: string; payload: string }) => void,\r\n  type: string,\r\n  errorText403: string,\r\n  otherErrorText: string\r\n) => {\r\n  if (status === 429) {\r\n    return dispatch({\r\n      type,\r\n      payload: 'Превышен лимит на запросы',\r\n    });\r\n  } else if (status === 403) {\r\n    return dispatch({\r\n      type,\r\n      payload: `${errorText403}`,\r\n    });\r\n  } else {\r\n    dispatch({\r\n      type,\r\n      payload: `${otherErrorText}`,\r\n    });\r\n  }\r\n};\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { RootState } from '../store/reducers';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import React from 'react';\r\nimport styles from './ErrorLoading.module.css';\r\nimport { Spin } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport { IErrorLoading } from '../../../types/UI/UI';\r\n\r\nconst antIcon = <LoadingOutlined className={styles.Loader} spin />;\r\n\r\nconst ErrorLoading: React.FC<IErrorLoading> = ({ loading, error }) => {\r\n  if (error) {\r\n    return <h1>{error}</h1>;\r\n  } else if (loading) {\r\n    return <Spin indicator={antIcon} />;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default ErrorLoading;\r\n","import { ICompetitionListState } from '../../types/store/Competitions';\r\nimport { ICompetitionResourceState } from '../../types/store/Competition';\r\nimport { IMatchListState } from '../../types/store/Matches';\r\nimport { IMatchResourceState } from '../../types/store/Match';\r\nimport { ITeamListState } from '../../types/store/Teams';\r\nimport { ITeamMatchesResourceState } from '../../types/store/TeamMatches';\r\nimport { ITeamResourceState } from '../../types/store/Team';\r\n\r\ninterface IState {\r\n  competitionList: ICompetitionListState;\r\n  competitionResource: ICompetitionResourceState;\r\n  matchList: IMatchListState;\r\n  matchResource: IMatchResourceState;\r\n  teamList: ITeamListState;\r\n  teamMatchesResource: ITeamMatchesResourceState;\r\n  teamResource: ITeamResourceState;\r\n}\r\n\r\nexport const competitionListSelector = (state: IState) => state.competitionList;\r\nexport const competitionResourceSelector = (state: IState) => state.competitionResource;\r\nexport const matchListSelector = (state: IState) => state.matchList;\r\nexport const matchResourceSelector = (state: IState) => state.matchResource;\r\nexport const teamListSelector = (state: IState) => state.teamList;\r\nexport const teamResourceSelector = (state: IState) => state.teamResource;\r\nexport const teamMatchesResourceSelector = (state: IState) => state.teamMatchesResource;\r\n","export const matchStatusTranslation = (status: string) => {\r\n  switch (status) {\r\n    case 'SCHEDULED':\r\n      return 'Запланирован';\r\n    case 'LIVE':\r\n      return 'В прямом эфире';\r\n    case 'IN_PLAY':\r\n      return 'В игре';\r\n    case 'PAUSED':\r\n      return 'Пауза';\r\n    case 'FINISHED':\r\n      return 'Завершен';\r\n    case 'POSTPONED':\r\n      return 'Отложен';\r\n    case 'SUSPENDED':\r\n      return 'Приостановлен';\r\n    case 'CANCELED':\r\n      return 'Отменен';\r\n    default:\r\n      return status;\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/noImage.d2645ad4.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Matches\":\"Matches_Matches__Spwjh\",\"Title\":\"Matches_Title__2M6_M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MatchList\":\"MatchList_MatchList__3jmtP\",\"Cards\":\"MatchList_Cards__16UpW\",\"CardImg\":\"MatchList_CardImg__26bbh\",\"PaginationRow\":\"MatchList_PaginationRow__3n9JF\"};","import React, { useEffect, useState } from 'react';\r\nimport styles from './MatchList.module.css';\r\nimport { Card, Col, Pagination, Row } from 'antd';\r\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchMatches } from '../../../../store/action-creators/MatchList';\r\nimport noImage from '../../../../assets/img/noImage.jpg';\r\nimport { Link } from 'react-router-dom';\r\nimport ErrorLoading from '../../../UI/ErrorLoading/ErrorLoading';\r\nimport { matchListSelector } from '../../../../store/selectors/selectors';\r\nimport { matchStatusTranslation } from '../../../../utils/matchStatusTranslation';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst MatchList: React.FC = () => {\r\n  // Получение данных из store\r\n  const { matches, error, loading } = useTypedSelector(matchListSelector);\r\n  const dispatch = useDispatch();\r\n\r\n  // Локальный стейт для реализации пагинации\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [matchesPerPage, setMatchesPerPage] = useState(6);\r\n\r\n  // Диспатч списка матчей\r\n  useEffect(() => {\r\n    dispatch(fetchMatches());\r\n  }, []);\r\n\r\n  // Переменные для реализации пагинации\r\n  const lastMatchIndex = currentPage * matchesPerPage;\r\n  const firstMatchIndex = lastMatchIndex - matchesPerPage;\r\n  const currentMatchList = matches.slice(firstMatchIndex, lastMatchIndex);\r\n\r\n  // Обработка нажатия на кнопки смены страницы в пагинации\r\n  const pageChangeHandler = (pageNumber: number, pageSize: number) => {\r\n    setCurrentPage(pageNumber);\r\n    setMatchesPerPage(pageSize);\r\n  };\r\n\r\n  // Отрисовка карточек матчей\r\n  function renderCards() {\r\n    if (matches.length != 0) {\r\n      return currentMatchList.map((match) => (\r\n        <Col key={match.id} xl={8} lg={12} md={24} sm={24} xs={24}>\r\n          <Link to={`${match.id}`}>\r\n            <Card\r\n              hoverable\r\n              cover={\r\n                <img\r\n                  className={styles.CardImg}\r\n                  src={\r\n                    match.competition.area.ensignUrl ? match.competition.area.ensignUrl : noImage\r\n                  }\r\n                  alt={match.competition.area.code}\r\n                />\r\n              }\r\n            >\r\n              <Meta\r\n                title={`${match.homeTeam.name} vs ${match.awayTeam.name}`}\r\n                description={\r\n                  match.status == 'FINISHED'\r\n                    ? match.score.fullTime.homeTeam + ' VS ' + match.score.fullTime.awayTeam\r\n                    : 'Статус: ' + matchStatusTranslation(match.status)\r\n                }\r\n              />\r\n            </Card>\r\n          </Link>\r\n        </Col>\r\n      ));\r\n    } else {\r\n      return <h1>Сегодня нет матчей</h1>;\r\n    }\r\n  }\r\n\r\n  // Обработка ошибки и загрузки\r\n  if (loading || error) {\r\n    return <ErrorLoading loading={loading} error={error} />;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.MatchList}>\r\n      <Row className={styles.Cards} gutter={[16, 16]}>\r\n        {renderCards()}\r\n      </Row>\r\n      <Row className={styles.PaginationRow}>\r\n        <Col span={24}>\r\n          <Pagination\r\n            defaultCurrent={1}\r\n            defaultPageSize={6}\r\n            size={window.innerWidth <= 420 ? 'small' : 'default'}\r\n            responsive={false}\r\n            total={matches.length}\r\n            showSizeChanger={true}\r\n            onChange={pageChangeHandler}\r\n            pageSizeOptions={['6', '9', '15', '21']}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MatchList;\r\n","import { Dispatch } from 'redux';\r\nimport axios from 'axios';\r\nimport { MatchesActionTypes, IMatchListAction } from '../../types/store/Matches';\r\nimport { errorResponseHandler } from '../../utils/errorResponseHandler';\r\n\r\nexport const fetchMatches = () => {\r\n  return async (dispatch: Dispatch<IMatchListAction>) => {\r\n    try {\r\n      dispatch({ type: MatchesActionTypes.FETCH_MATCHES });\r\n      const response = await axios.get(`${process.env.REACT_APP_MATCH_LIST}`, {\r\n        headers: {\r\n          'X-Auth-Token': `${process.env.REACT_APP_TOKEN}`,\r\n        },\r\n      });\r\n      dispatch({\r\n        type: MatchesActionTypes.FETCH_MATCHES_SUCCESS,\r\n        payload: response.data.matches,\r\n      });\r\n    } catch (e: any) {\r\n      // Невозможно дать конкретный тип ошибке\r\n\r\n      const type = MatchesActionTypes.FETCH_MATCHES_ERROR;\r\n      const errorText403 = 'Список матчей не входит в бесплатный тариф';\r\n      const otherErrorText = 'Произошла ошибка при загрузке списка матчей';\r\n\r\n      errorResponseHandler(e.response.status, dispatch, type, errorText403, otherErrorText);\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport styles from './Matches.module.css';\r\nimport Container from '../../UI/Container/Container';\r\nimport { Typography } from 'antd';\r\nimport MatchList from './MatchList/MatchList';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Matches: React.FC = () => {\r\n  return (\r\n    <div className={styles.Matches}>\r\n      <Container>\r\n        <Title className={styles.Title}>Список матчей на сегодня</Title>\r\n        <MatchList />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Matches;\r\n"],"sourceRoot":""}