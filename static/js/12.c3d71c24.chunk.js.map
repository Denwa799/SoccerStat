{"version":3,"sources":["utils/errorResponseHandler.ts","hooks/useTypedSelector.ts","components/UI/ErrorLoading/ErrorLoading.tsx","store/selectors/selectors.ts","utils/matchStatusTranslation.ts","components/UI/AppTable/AppTable.tsx","components/pages/Main/CompetitionResource/CompetitionResource.module.css","store/action-creators/CompetitionResource.ts","components/pages/Main/CompetitionResource/CompetitionResource.tsx"],"names":["errorResponseHandler","status","dispatch","type","errorText403","otherErrorText","payload","useTypedSelector","useSelector","antIcon","className","styles","Loader","spin","ErrorLoading","loading","error","indicator","competitionListSelector","state","competitionList","competitionResourceSelector","competitionResource","matchListSelector","matchList","matchResourceSelector","matchResource","teamListSelector","teamList","teamResourceSelector","teamResource","teamMatchesResourceSelector","teamMatchesResource","matchStatusTranslation","AppTable","dataSource","columns","title","dataIndex","key","responsive","scroll","x","pagination","size","window","innerWidth","position","showSizeChanger","module","exports","fetchCompetition","id","dateFrom","dateTo","a","CompetitionActionTypes","FETCH_COMPETITION","axios","get","process","headers","params","response","FETCH_COMPETITION_SUCCESS","data","FETCH_COMPETITION_ERROR","Title","Typography","RangePicker","DatePicker","CompetitionResource","competition","useDispatch","useState","setDataSource","useSearchParams","searchParams","setSearchParams","useParams","onFilterChange","dates","dateStrings","useEffect","dateFromParam","dateToParam","Object","keys","length","matches","map","match","extraTimeHomeScore","score","extraTime","homeTeam","extraTimeAwayScore","awayTeam","penaltiesHomeScore","penalties","penaltiesAwayScore","fullTime","date","Date","utcDate","toLocaleString","teams","name","Container","Item","to","MAIN_ROUTE","rangeFilter","onChange","value","moment"],"mappings":"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","file":"static/js/12.c3d71c24.chunk.js","sourcesContent":["export const errorResponseHandler = (\r\n  status: number,\r\n  dispatch: ({ type, payload }: { type: string; payload: string }) => void,\r\n  type: string,\r\n  errorText403: string,\r\n  otherErrorText: string\r\n) => {\r\n  if (status === 429) {\r\n    return dispatch({\r\n      type,\r\n      payload: 'Превышен лимит на запросы',\r\n    });\r\n  } else if (status === 403) {\r\n    return dispatch({\r\n      type,\r\n      payload: `${errorText403}`,\r\n    });\r\n  } else {\r\n    dispatch({\r\n      type,\r\n      payload: `${otherErrorText}`,\r\n    });\r\n  }\r\n};\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { RootState } from '../store/reducers';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import React from 'react';\r\nimport styles from './ErrorLoading.module.css';\r\nimport { Spin } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport { IErrorLoading } from '../../../types/UI/UI';\r\n\r\nconst antIcon = <LoadingOutlined className={styles.Loader} spin />;\r\n\r\nconst ErrorLoading: React.FC<IErrorLoading> = ({ loading, error }) => {\r\n  if (error) {\r\n    return <h1>{error}</h1>;\r\n  } else if (loading) {\r\n    return <Spin indicator={antIcon} />;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default ErrorLoading;\r\n","import { ICompetitionListState } from '../../types/store/Competitions';\r\nimport { ICompetitionResourceState } from '../../types/store/Competition';\r\nimport { IMatchListState } from '../../types/store/Matches';\r\nimport { IMatchResourceState } from '../../types/store/Match';\r\nimport { ITeamListState } from '../../types/store/Teams';\r\nimport { ITeamMatchesResourceState } from '../../types/store/TeamMatches';\r\nimport { ITeamResourceState } from '../../types/store/Team';\r\n\r\ninterface IState {\r\n  competitionList: ICompetitionListState;\r\n  competitionResource: ICompetitionResourceState;\r\n  matchList: IMatchListState;\r\n  matchResource: IMatchResourceState;\r\n  teamList: ITeamListState;\r\n  teamMatchesResource: ITeamMatchesResourceState;\r\n  teamResource: ITeamResourceState;\r\n}\r\n\r\nexport const competitionListSelector = (state: IState) => state.competitionList;\r\nexport const competitionResourceSelector = (state: IState) => state.competitionResource;\r\nexport const matchListSelector = (state: IState) => state.matchList;\r\nexport const matchResourceSelector = (state: IState) => state.matchResource;\r\nexport const teamListSelector = (state: IState) => state.teamList;\r\nexport const teamResourceSelector = (state: IState) => state.teamResource;\r\nexport const teamMatchesResourceSelector = (state: IState) => state.teamMatchesResource;\r\n","export const matchStatusTranslation = (status: string) => {\r\n  switch (status) {\r\n    case 'SCHEDULED':\r\n      return 'Запланирован';\r\n    case 'LIVE':\r\n      return 'В прямом эфире';\r\n    case 'IN_PLAY':\r\n      return 'В игре';\r\n    case 'PAUSED':\r\n      return 'Пауза';\r\n    case 'FINISHED':\r\n      return 'Завершен';\r\n    case 'POSTPONED':\r\n      return 'Отложен';\r\n    case 'SUSPENDED':\r\n      return 'Приостановлен';\r\n    case 'CANCELED':\r\n      return 'Отменен';\r\n    default:\r\n      return status;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\nimport { IAppTable, IAppTableColumn } from '../../../types/UI/UI';\r\n\r\nconst AppTable: React.FC<IAppTable> = ({ dataSource }) => {\r\n  const columns: IAppTableColumn[] = [\r\n    {\r\n      title: 'Статус',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      responsive: ['sm'],\r\n    },\r\n    {\r\n      title: 'Дата и время',\r\n      dataIndex: 'date',\r\n      key: 'date',\r\n    },\r\n    {\r\n      title: 'Хозяева VS Гости',\r\n      dataIndex: `teams`,\r\n      key: 'teams',\r\n    },\r\n    {\r\n      title: 'Счет (доп время) (пенальти)',\r\n      dataIndex: `score`,\r\n      key: 'score',\r\n    },\r\n  ];\r\n  return (\r\n    <Table\r\n      columns={columns}\r\n      dataSource={dataSource}\r\n      scroll={{ x: '320px' }}\r\n      pagination={{\r\n        size: window.innerWidth <= 420 ? 'small' : 'default',\r\n        position: ['bottomLeft'],\r\n        showSizeChanger: true,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppTable;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CompetitionResource\":\"CompetitionResource_CompetitionResource__2PfiZ\",\"Title\":\"CompetitionResource_Title__3JuM9\",\"loading\":\"CompetitionResource_loading__3kAYs\",\"rangeFilter\":\"CompetitionResource_rangeFilter__1KiTj\"};","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { ICompetitionResourceAction, CompetitionActionTypes } from '../../types/store/Competition';\r\nimport { errorResponseHandler } from '../../utils/errorResponseHandler';\r\n\r\nexport const fetchCompetition = (id: string | undefined, dateFrom: string, dateTo: string) => {\r\n  return async (dispatch: Dispatch<ICompetitionResourceAction>) => {\r\n    try {\r\n      dispatch({ type: CompetitionActionTypes.FETCH_COMPETITION });\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_COMPETITION_LIST}/${id}${process.env.REACT_APP_MATCH}`,\r\n        {\r\n          headers: {\r\n            'X-Auth-Token': `${process.env.REACT_APP_TOKEN}`,\r\n          },\r\n          params: {\r\n            dateFrom: dateFrom,\r\n            dateTo: dateTo,\r\n          },\r\n        }\r\n      );\r\n      dispatch({\r\n        type: CompetitionActionTypes.FETCH_COMPETITION_SUCCESS,\r\n        payload: response.data,\r\n      });\r\n    } catch (e: any) {\r\n      // Невозможно дать конкретный тип ошибке\r\n\r\n      const type = CompetitionActionTypes.FETCH_COMPETITION_ERROR;\r\n      const errorText403 = 'Это соревнование не входит в бесплатный тариф';\r\n      const otherErrorText =\r\n        'Произошла ошибка при загрузке соревнования / оно не входит в бесплатный тариф';\r\n\r\n      errorResponseHandler(e.response.status, dispatch, type, errorText403, otherErrorText);\r\n    }\r\n  };\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport styles from './CompetitionResource.module.css';\r\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchCompetition } from '../../../../store/action-creators/CompetitionResource';\r\nimport { Link, useParams, useSearchParams } from 'react-router-dom';\r\nimport { Typography, DatePicker, Breadcrumb } from 'antd';\r\nimport Container from '../../../UI/Container/Container';\r\nimport AppTable from '../../../UI/AppTable/AppTable';\r\nimport moment from 'moment';\r\nimport ErrorLoading from '../../../UI/ErrorLoading/ErrorLoading';\r\nimport { competitionResourceSelector } from '../../../../store/selectors/selectors';\r\nimport { IDataSource } from '../../../../types/pages/pages';\r\nimport { matchStatusTranslation } from '../../../../utils/matchStatusTranslation';\r\nimport { MAIN_ROUTE } from '../../../../utils/routes';\r\n\r\nconst { Title } = Typography;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst CompetitionResource: React.FC = () => {\r\n  // Получение данных из store\r\n  const { competition, error, loading } = useTypedSelector(competitionResourceSelector);\r\n  const dispatch = useDispatch();\r\n\r\n  // Локальный стейт для таблицы\r\n  const [dataSource, setDataSource] = useState<IDataSource[]>([]);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const params = useParams();\r\n\r\n  // Получение матчей и данных фильтрации из параметров строки url\r\n  useEffect(() => {\r\n    const dateFromParam = searchParams.get('dateFrom') || '';\r\n    const dateToParam = searchParams.get('dateTo') || '';\r\n    dispatch(fetchCompetition(params.id, dateFromParam, dateToParam));\r\n  }, []);\r\n\r\n  // Отправка полученных данных в таблицу\r\n  useEffect(() => {\r\n    if (Object.keys(competition).length != 0 && competition.matches) {\r\n      const matches = competition.matches.map((match) => {\r\n        const extraTimeHomeScore = match.score.extraTime.homeTeam\r\n          ? `${match.score.extraTime.homeTeam}`\r\n          : '0';\r\n        const extraTimeAwayScore = match.score.extraTime.awayTeam\r\n          ? `${match.score.extraTime.awayTeam}`\r\n          : '0';\r\n        const penaltiesHomeScore = match.score.penalties.homeTeam\r\n          ? `${match.score.penalties.homeTeam}`\r\n          : '0';\r\n        const penaltiesAwayScore = match.score.penalties.awayTeam\r\n          ? `${match.score.penalties.awayTeam}`\r\n          : '0';\r\n        let score = `${match.score.fullTime.homeTeam}:${match.score.fullTime.awayTeam} (${extraTimeHomeScore}:${extraTimeAwayScore}) (${penaltiesHomeScore}:${penaltiesAwayScore})`;\r\n        if (match.score.fullTime.homeTeam === null && match.score.fullTime.awayTeam === null) {\r\n          score = 'Неизвестно';\r\n        }\r\n        return {\r\n          key: match.id,\r\n          status: matchStatusTranslation(match.status),\r\n          date: `${new Date(match.utcDate).toLocaleString()} `,\r\n          teams: `${match.homeTeam.name} VS ${match.awayTeam.name}`,\r\n          score: score,\r\n        };\r\n      });\r\n      setDataSource(matches);\r\n    }\r\n  }, [competition]);\r\n\r\n  // Обработка изменении дат для фильтрации\r\n  function onFilterChange(dates: any, dateStrings: string[]) {\r\n    // Невозможно определить dates, так как в него приходит объект даты moment\r\n    setSearchParams({ dateFrom: dateStrings[0], dateTo: dateStrings[1] });\r\n    dispatch(fetchCompetition(params.id, dateStrings[0], dateStrings[1]));\r\n  }\r\n\r\n  // Отрисовка содержимого страницы\r\n  function renderPage() {\r\n    if (Object.keys(competition).length != 0 && competition.competition) {\r\n      return (\r\n        <div>\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>\r\n              <Link to={MAIN_ROUTE}>Соревнования</Link>\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item>{competition.competition.name}</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <Title className={styles.Title}>Матчи</Title>\r\n          <RangePicker\r\n            className={styles.rangeFilter}\r\n            onChange={onFilterChange}\r\n            value={[\r\n              searchParams.get('dateFrom') ? moment(searchParams.get('dateFrom')) : null,\r\n              searchParams.get('dateTo') ? moment(searchParams.get('dateTo')) : null,\r\n            ]}\r\n          />\r\n          <AppTable dataSource={dataSource} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <h1>Соревнование не найдено</h1>;\r\n    }\r\n  }\r\n\r\n  // Обработка ошибки и загрузки\r\n  if (loading || error) {\r\n    return (\r\n      <Container>\r\n        <ErrorLoading loading={loading} error={error} />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.CompetitionResource}>\r\n      <Container>{renderPage()}</Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompetitionResource;\r\n"],"sourceRoot":""}